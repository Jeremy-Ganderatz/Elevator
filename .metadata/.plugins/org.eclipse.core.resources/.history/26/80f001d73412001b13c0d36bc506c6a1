package objects;

public class Elevator {
	
	private int totalStairs = Building.getTotalfloors();

	private static Elevator elevator = null;
	private static int maximumUsers = 5;
	
	private boolean positionDoor = false; // closed
	private int currentPosition;
	private String controlPanel[] = new String[totalStairs];
	private int nbOfUsersInElevator = 0;

	public Elevator() {

	}

//	public Elevator(int totalStairs, boolean positionDoor, int currentPosition, String[] controlPanel, int nbOfUsersInElevator) {
//		super();
//		this.totalStairs = totalStairs;
//		this.positionDoor = positionDoor;
//		this.currentPosition = currentPosition;
//		this.controlPanel = controlPanel;
//		this.nbOfUsersInElevator = nbOfUsersInElevator;
//	}

	public static Elevator getInstance() {
		if (elevator == null) {
			elevator = new Elevator();
		}
		return elevator;
	}


	public boolean isPositionDoor() {
		return positionDoor;
	}

	public void setPositionDoor(boolean positionDoor) {
		this.positionDoor = positionDoor;
	}

	public int getCurrentPosition() {
		return currentPosition;
	}

	public void setCurrentPosition(int currentPosition) {
		this.currentPosition = currentPosition;
	}

	public String[] getControlPanel() {
		return controlPanel;
	}

	public String[] setControlPanel(int totalStairs, int bottomStair) {
		int nb = bottomStair;
		String controlPanel[] = new String[totalStairs];
		for (int i = 0; i < totalStairs; i++) {
			controlPanel[i] = String.valueOf(nb);
			nb++;
		}
		return controlPanel;
	}

	public int getNbOfUsersInElevator() {
		return nbOfUsersInElevator;
	}

	public void setNbOfUsersInElevator(int nbOfUsersInElevator) {
		this.nbOfUsersInElevator = nbOfUsersInElevator;
	}

	public static int getMaximumUsers() {
		return maximumUsers;
	}

}
